@page
@model System_Zarz.Pages.Tasks.IndexModel
@{
    ViewData["Title"] = "Zarządzanie czynnościami";
}

<h1>Zarządzanie czynnościami</h1>

<form method="post" class="mb-4">
    <div class="mb-3">
        <label asp-for="NewTask.Description" class="form-label">Opis czynności</label>
        <input asp-for="NewTask.Description" class="form-control" />
        <span asp-validation-for="NewTask.Description" class="text-danger"></span>
    </div>
    <div class="mb-3">
        <label asp-for="NewTask.LaborCost" class="form-label">Koszt robocizny</label>
        <input asp-for="NewTask.LaborCost" type="number" step="0.01" min="0" class="form-control" />
        <span asp-validation-for="NewTask.LaborCost" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label for="SelectedPartId" class="form-label">Wybierz część</label>
        <select asp-for="SelectedPartId" class="form-select" asp-items="@(new SelectList(Model.PartsList, "Id", "Name"))">
            <option value="">-- wybierz część --</option>
        </select>
        <span asp-validation-for="SelectedPartId" class="text-danger"></span>
    </div>

    <div class="mb-3">
        <label asp-for="PartQuantity" class="form-label">Ilość części</label>
        <input asp-for="PartQuantity" type="number" min="1" class="form-control" />
        <span asp-validation-for="PartQuantity" class="text-danger"></span>
    </div>

    <button type="submit" class="btn btn-primary">Dodaj czynność z częścią</button>
</form>

<hr />

<h2>Lista czynności</h2>

@if (Model.TasksList.Any())
{
    <table class="table table-striped">
        <thead>
        <tr>
            <th>Opis</th>
            <th>Koszt robocizny</th>
            <th>Części</th>
            <th>Ilość części</th>
            <th>Łączny koszt części</th>
            <th>Razem (robocizna + części)</th>
        </tr>
        </thead>
        <tbody>
        @foreach (var task in Model.TasksList)
        {
            var parts = task.TaskParts.Select(tp => new
            {
                Part = tp.Part,
                Quantity = tp.Quantity
            }).ToList();


            decimal partsCost = parts.Sum(p => p.Part.Price * p.Quantity);
            decimal totalCost = task.LaborCost + partsCost;

            <tr>
                <td>@task.Description</td>
                <td>@task.LaborCost.ToString("C")</td>
                <td>
                    @foreach(var p in parts)
                    {
                        <div>@p.Part.Name</div>
                    }
                </td>
                <td>
                    @foreach(var p in parts)
                    {
                        <div>@p.Quantity</div>
                    }
                </td>
                <td>@partsCost.ToString("C")</td>
                <td>@totalCost.ToString("C")</td>
            </tr>
        }
        </tbody>
    </table>
}
else
{
    <p>Brak dodanych czynności.</p>
}

@section Scripts {
    <partial name="_ValidationScriptsPartial" />
}
